:ls 命 令 会 列 出 所 有 被 载 入 到 内 存 中 的 缓 冲 区 的 列 表，
:bnext 命令可以切换到列表中的下一个缓冲区，% 符号指明哪个缓冲区在当前窗口中可见,而 # 符号则代表轮换文件。按 <C-^>
可以在当前文件和轮换文件间快速切换，可以用 4 条命令来遍历缓冲区列表。 :bprev 和 :bnext 在列表中反向或正
向移动,每次移动一项;而 :bfirst 和 :blast 则分别跳到列表的开头和结尾

:buffer N 命令直接凭编号跳转到一个缓冲区(参见 :h :b ),或是用更
直观的 :buffer {bufname} 格式实现同样的功能

:bdelete N1 N2 N3
:N,M bdelete删除缓冲区

用 :argdo命令可以在参数列表中的每个文件上执行一条 Ex 命令。

:args文件参数列表

缓冲区 a.txt 前有一个 + 号,表示这个缓冲区被修改过了。如果现在保存文件
的话,缓冲区的内容就会被写入磁盘里,而 + 号也会消失了


叹号会强制 Vim 切换缓冲区,即使当前缓冲区中有未保存的修改,也会继续切
换。如果现在再运行 :ls 命令,就会发现 b.txt 被标记为 a ,表示它当前是活动缓
冲区(active),而 a.txt 则被标记为 h ,表示它是一个隐藏缓冲区(hidden) 当一个缓冲区被隐藏后,Vim 允许我们像往常一样工作。我们可以打开其他缓冲
区,对其进行修改、保存等,没有任何不同。也就是说,一直到尝试退出编辑会话前,
一切如常。然而,当我们想关闭编辑会话时,Vim 就会提醒我们某个缓冲区中有未保
存的修改:

:w[rite] 把缓冲区内容写入磁盘
:e[dit]! 把磁盘文件内容读入缓冲区(即回滚所做修改)
:qa[ll]! 关闭所有窗口,摒弃修改而无需警告
:wa[ll]! 把所有改变的缓冲区写入磁盘

窗口分割操作跳过




